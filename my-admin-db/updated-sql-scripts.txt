## Admin user table

CREATE TABLE `my-admin-db`.`admin_user` (
  `admin_user_id` int(11) NOT NULL AUTO_INCREMENT,
  `admin_user_name` varchar(100) NOT NULL,
  `first_name` varchar(255) NOT NULL,
  `middle_name` varchar(255) DEFAULT NULL,
  `last_name` varchar(255) NOT NULL, 
  `password` varchar(10000) NOT NULL,
  PRIMARY KEY (`admin_user_id`),
  UNIQUE KEY `admin_user_name_UNIQUE` (`admin_user_name`)
);

## Product table

CREATE TABLE `my-admin-db`.`product` (
  `product_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `price` decimal(6,2) NOT NULL,
  `description` varchar(10000) DEFAULT NULL,
  `product_code` varchar(5) NOT NULL,
  `created_date` datetime NOT NULL,
  `updated_date` datetime NOT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE KEY `product_code_UNIQUE` (`product_code`),
  KEY `product_createdfk_1` (`created_by`),
  CONSTRAINT `product_createdfk_1` FOREIGN KEY (`created_by`) REFERENCES `admin_user` (`admin_user_id`),
  KEY `product_updatedfk_1` (`updated_by`),
  CONSTRAINT `product_updatedfk_1` FOREIGN KEY (`updated_by`) REFERENCES `admin_user` (`admin_user_id`)
);

## Link between Admin user table and Product table since its a many to many relation
## This table only gets updated when an admin user creates/updates a product in the product table

CREATE TABLE `my-admin-db`.`admin_user_product` (
  `admin_user_product_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_id` int(11) NOT NULL,
  `created_date` datetime NOT NULL,
  `created_by` int(11) NOT NULL,
  PRIMARY KEY (`audit_log_id`),
  KEY `adminuser_userfk_1` (`created_by`),
  CONSTRAINT `adminuser_userfk_1` FOREIGN KEY (`created_by`) REFERENCES `admin_user` (`admin_user_id`),
  KEY `adminuser_productfk_1` (`product_id`),
  CONSTRAINT `adminuser_productfk_1` FOREIGN KEY (`product_id`) REFERENCES `product` (`product_id`)
);

## Dynamic Attribute table

CREATE TABLE `my-admin-db`.`attribute` (
  `attribute_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `created_date` datetime NOT NULL,
  `updated_date` datetime NOT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  PRIMARY KEY (`attribute_id`),
  UNIQUE KEY `name_UNIQUE` (`name`),
  KEY `attribute_createdfk_1` (`created_by`),
  CONSTRAINT `attribute_createdfk_1` FOREIGN KEY (`created_by`) REFERENCES `admin_user` (`admin_user_id`),
  KEY `attribute_updatedfk_1` (`updated_by`),
  CONSTRAINT `attribute_updatefk_1` FOREIGN KEY (`updated_by`) REFERENCES `admin_user` (`admin_user_id`)
);

## Link between Product and Attributes table since its a many to many relation
## This table only gets updated when an admin user creates/updates an product attribute in the product attribute table

CREATE TABLE `my-admin-db`.`product_attribute` (
  `product_attribute_id` int(11) NOT NULL AUTO_INCREMENT,
  `product_id` int(11) NOT NULL,
  `attribute_id` int(11) NOT NULL,
  `attribute_value` varchar(10000) NOT NULL,
  `created_date` datetime NOT NULL,
  `updated_date` datetime NOT NULL,
  `created_by` int(11) NOT NULL,
  `updated_by` int(11) NOT NULL,
  PRIMARY KEY (`product_attribute_id`),
  KEY `product_attribute_productfk_1` (`product_id`),
  CONSTRAINT `product_attribute_productfk_1` FOREIGN KEY (`product_id`) REFERENCES `product` (`product_id`),
  KEY `product_attribute_attributefk_1` (`attribute_id`),
  CONSTRAINT `product_attribute_attributefk_1` FOREIGN KEY (`attribute_id`) REFERENCES `attribute` (`attribute_id`),
  KEY `product_attribute_createdfk_1` (`created_by`),
  CONSTRAINT `product_attribute_createdfk_1` FOREIGN KEY (`created_by`) REFERENCES `admin_user` (`admin_user_id`),
  KEY `product_attribute_updatedfk_1` (`updated_by`),
  CONSTRAINT `product_attribute_updatefk_1` FOREIGN KEY (`updated_by`) REFERENCES `admin_user` (`admin_user_id`)
);


## This table only gets updated when an admin user performs an operation on the product, attribute, or product_attribute table

CREATE TABLE `my-admin-db`.`audit_log` (
  `audit_log_id` int(11) NOT NULL AUTO_INCREMENT,
  `admin_user_id` int(11) NOT NULL,
  `attribute_id` int(11),
  `product_attribute_id` int(11),
  `product_id` int(11) NOT NULL,
  `operation_type` varchar(10) NOT NULL,
  `created_date` datetime NOT NULL,
  `old_value` varchar(10000),
  `new_value` varchar(10000) NOT NULL,
  PRIMARY KEY (`audit_log_id`),
  KEY `auditlog_userfk_1` (`admin_user_id`),
  CONSTRAINT `auditlog_userfk_1` FOREIGN KEY (`admin_user_id`) REFERENCES `admin_user` (`admin_user_id`),
  KEY `auditlog_productfk_1` (`product_id`),
  CONSTRAINT `auditlog_productfk_1` FOREIGN KEY (`product_id`) REFERENCES `product` (`product_id`),
  KEY `auditlog_attributefk_1` (`attribute_id`),
  CONSTRAINT `auditlog_attributefk_1` FOREIGN KEY (`attribute_id`) REFERENCES `attribute` (`attribute_id`),
  KEY `auditlog_productattributefk_1` (`product_attribute_id`),
  CONSTRAINT `auditlog_productattributefk_1` FOREIGN KEY (`product_attribute_id`) REFERENCES `product_attribute` (`product_attribute_id`)
);


USE `my-admin-db`;

select product.name as 'Product Name', product.price as 'Product Price', 
attribute.name as 'Attribute Name', product_attribute.attribute_value as 'Attribute Value', 
admin_user.admin_user_name as 'Created by Admin'
from product
left join product_attribute
on product.product_id = product_attribute.product_id
left join attribute
on attribute.attribute_id = product_attribute.attribute_id
cross join admin_user
on product.created_by = admin_user.admin_user_id
order by product.name;